#!/bin/bash

# Script pour configurer Artifact Registry et les variables GitHub

set -e

# Couleurs pour les messages
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${GREEN}üîß Configuration d'Artifact Registry${NC}"

# V√©rifier que nous sommes dans le bon r√©pertoire
if [ ! -d "terraform" ]; then
    echo -e "${RED}‚ùå Le r√©pertoire terraform/ n'existe pas.${NC}"
    echo "Assurez-vous d'√™tre dans le r√©pertoire racine du projet."
    exit 1
fi

# Aller dans le r√©pertoire terraform
cd terraform

# V√©rifier que Terraform est initialis√©
if [ ! -d ".terraform" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  Terraform n'est pas initialis√©.${NC}"
    echo -e "${YELLOW}üîß Initialisation de Terraform...${NC}"
    terraform init
fi

# Obtenir les informations d'Artifact Registry
echo -e "${YELLOW}üîç R√©cup√©ration des informations d'Artifact Registry...${NC}"

ARTIFACT_REGISTRY_URL=$(terraform output -raw artifact_registry_info 2>/dev/null | jq -r '.repository_url' 2>/dev/null || echo "")
ARTIFACT_REGISTRY_ID=$(terraform output -raw artifact_registry_info 2>/dev/null | jq -r '.repository_id' 2>/dev/null || echo "")
WRITER_SA=$(terraform output -raw artifact_registry_info 2>/dev/null | jq -r '.writer_service_account' 2>/dev/null || echo "")

if [ -z "$ARTIFACT_REGISTRY_URL" ]; then
    echo -e "${RED}‚ùå Impossible de r√©cup√©rer les informations d'Artifact Registry.${NC}"
    echo "Assurez-vous que le module artifact-registry a √©t√© d√©ploy√© avec succ√®s."
    echo "Ex√©cutez: terraform apply"
    exit 1
fi

echo -e "${GREEN}‚úÖ Informations d'Artifact Registry r√©cup√©r√©es !${NC}"
echo "  - URL: $ARTIFACT_REGISTRY_URL"
echo "  - ID: $ARTIFACT_REGISTRY_ID"
echo "  - Writer SA: $WRITER_SA"

# Retourner au r√©pertoire parent
cd ..

# V√©rifier que gh CLI est install√©
if ! command -v gh &> /dev/null; then
    echo -e "${RED}‚ùå GitHub CLI (gh) n'est pas install√©. Veuillez l'installer d'abord.${NC}"
    echo "Installation: https://cli.github.com/"
    exit 1
fi

# V√©rifier que l'utilisateur est connect√© √† GitHub
if ! gh auth status &> /dev/null; then
    echo -e "${RED}‚ùå Vous n'√™tes pas connect√© √† GitHub CLI. Veuillez vous connecter d'abord.${NC}"
    echo "Commande: gh auth login"
    exit 1
fi

# Configuration des variables GitHub
echo -e "${YELLOW}üîß Configuration des variables GitHub...${NC}"

# Variables pour l'environnement de d√©veloppement
echo -e "${BLUE}üìù Configuration de l'environnement 'Develop'...${NC}"
gh variable set ARTIFACT_REGISTRY_URL --body="$ARTIFACT_REGISTRY_URL" --env=Develop
gh variable set REGISTRY --body="$ARTIFACT_REGISTRY_URL" --env=Develop
gh variable set IMAGE_NAME --body="tasks-app" --env=Develop
gh variable set INSTANCE_NAME --body="tasks-mysql" --env=Develop

# Variables pour l'environnement de production
echo -e "${BLUE}üìù Configuration de l'environnement 'Production'...${NC}"
gh variable set ARTIFACT_REGISTRY_URL --body="$ARTIFACT_REGISTRY_URL" --env=Production
gh variable set REGISTRY --body="$ARTIFACT_REGISTRY_URL" --env=Production
gh variable set IMAGE_NAME --body="tasks-app" --env=Production
gh variable set INSTANCE_NAME --body="tasks-mysql" --env=Production

echo -e "${GREEN}‚úÖ Configuration termin√©e avec succ√®s !${NC}"
echo ""
echo -e "${BLUE}üìã R√©sum√© de la configuration:${NC}"
echo "  - Artifact Registry URL: $ARTIFACT_REGISTRY_URL"
echo "  - Repository ID: $ARTIFACT_REGISTRY_ID"
echo "  - Writer Service Account: $WRITER_SA"
echo ""
echo -e "${YELLOW}üí° Les workflows GitHub Actions utiliseront maintenant Artifact Registry.${NC}"
echo -e "${YELLOW}üí° Vous pouvez maintenant pousser du code pour d√©clencher les workflows.${NC}"

# Afficher les commandes Docker pour tester
echo ""
echo -e "${BLUE}üê≥ Commandes Docker pour tester:${NC}"
echo "  # Authentification"
echo "  gcloud auth configure-docker $ARTIFACT_REGISTRY_URL"
echo ""
echo "  # Build et push d'une image de test"
echo "  docker build -t $ARTIFACT_REGISTRY_URL/test:latest ./app"
echo "  docker push $ARTIFACT_REGISTRY_URL/test:latest"
echo ""
echo -e "${GREEN}üéâ Artifact Registry est maintenant configur√© !${NC}"
