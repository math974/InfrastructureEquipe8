# Default values for tasks-app
replicaCount: 2

image:
  repository: gcr.io/PROJECT_ID/tasks-app
  pullPolicy: IfNotPresent
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 2000

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  targetPort: 8000

ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
  hosts:
    - host: tasks-app.example.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: tasks-app-tls
      hosts:
        - tasks-app.example.com

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 250m
    memory: 256Mi

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Environment variables
env:
  DB_HOST: "mysql-service"
  DB_PORT: "3306"
  DB_NAME: "tasksdb"
  DB_USER: "app_user"
  # DB_PASSWORD will be set via secret

# Database configuration
database:
  enabled: false  # Set to true if you want to deploy MySQL in the same cluster
  host: "mysql-service"
  port: 3306
  name: "tasksdb"
  user: "app_user"

# Secrets
secrets:
  create: true
  dbPassword: ""

# ConfigMap for non-sensitive config
configMap:
  create: true
  data:
    LOG_LEVEL: "INFO"
    ENVIRONMENT: "production"
