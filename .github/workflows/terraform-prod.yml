name: Terraform (Production)

on:
  push:
    branches: [main]
    paths-ignore:
      - 'bootstrap-wif/**'

concurrency:
  group: terraform-production-${{ github.ref }}
  cancel-in-progress: false

env:
  TF_IN_AUTOMATION: true
  TF_INPUT: false

jobs:
  fmt_validate_networks:
    name: Format & Validate (Networks)
    runs-on: ubuntu-latest
    environment:
      name: Production
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Auth to Google Cloud (WIF)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5
          terraform_wrapper: true

      - name: Cache Terraform plugins
        uses: actions/cache@v4
        with:
          path: |
            ~/.terraform.d/plugin-cache
            ./.terraform
          key: ${{ runner.os }}-terraform-${{ hashFiles('**/.terraform.lock.hcl') }}
          restore-keys: |
            ${{ runner.os }}-terraform-

      - name: Terraform Init (networks - backend prd)
        run: |
          cd netwoks
          terraform init \
            -backend-config=../configs/prd.config

      - name: Terraform Format Check (networks)
        run: |
          cd netwoks
          terraform fmt -check -recursive

      - name: Terraform Validate (networks)
        run: |
          cd netwoks
          terraform validate


  plan_networks:
    name: Plan (Networks - Production)
    runs-on: ubuntu-latest
    needs: [fmt_validate_networks]
    environment:
      name: Production
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Auth to Google Cloud (WIF)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5
          terraform_wrapper: true

      - name: Cache Terraform plugins
        uses: actions/cache@v4
        with:
          path: |
            ~/.terraform.d/plugin-cache
            ./.terraform
          key: ${{ runner.os }}-terraform-${{ hashFiles('**/.terraform.lock.hcl') }}
          restore-keys: |
            ${{ runner.os }}-terraform-

      - name: Terraform Init (networks - backend prd)
        run: |
          cd netwoks
          terraform init \
            -backend-config=../configs/prd.config

      - name: Terraform Plan (networks - env prd)
        id: plan_networks
        run: |
          cd netwoks
          terraform plan \
            -var-file=envs/prd.tfvars \
            -input=false


  apply_networks:
    name: Apply (Networks - Production)
    runs-on: ubuntu-latest
    needs: [fmt_validate_networks, plan_networks]
    environment:
      name: Production
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Auth to Google Cloud (WIF)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5
          terraform_wrapper: true

      - name: Cache Terraform plugins
        uses: actions/cache@v4
        with:
          path: |
            ~/.terraform.d/plugin-cache
            ./.terraform
          key: ${{ runner.os }}-terraform-${{ hashFiles('**/.terraform.lock.hcl') }}
          restore-keys: |
            ${{ runner.os }}-terraform-

      - name: Terraform Init (networks - backend prd)
        run: |
          cd netwoks
          terraform init \
            -backend-config=../configs/prd.config

      - name: Terraform Apply (networks - env prd)
        run: |
          cd netwoks
          terraform apply \
            -auto-approve \
            -var-file=envs/prd.tfvars \
            -input=false

