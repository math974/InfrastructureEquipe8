version: '3.8'

services:
  # Base de données MySQL
  mysql:
    image: mysql:8.0
    container_name: ${MYSQL_CONTAINER_NAME:-tasks-mysql}
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - tasks-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Application FastAPI
  app:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: ${APP_CONTAINER_NAME:-tasks-app}
    restart: unless-stopped
    environment:
      # Configuration base de données
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      
      # Configuration application
      PYTHONPATH: /app
      PYTHONUNBUFFERED: 1
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
      ENVIRONMENT: ${ENVIRONMENT:-development}
    ports:
      - "${APP_PORT:-8000}:8000"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - tasks-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Interface d'administration MySQL (optionnel)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: ${PHPMYADMIN_CONTAINER_NAME:-tasks-phpmyadmin}
    restart: unless-stopped
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: ${MYSQL_USER}
      PMA_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "${PHPMYADMIN_PORT:-8080}:80"
    depends_on:
      - mysql
    networks:
      - tasks-network

volumes:
  mysql_data:
    driver: local

networks:
  tasks-network:
    driver: bridge
